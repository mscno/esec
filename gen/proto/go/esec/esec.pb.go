// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: esec/esec.proto

package esecpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Project information
type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org     string `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	Repo    string `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	OrgRepo string `protobuf:"bytes,3,opt,name=org_repo,json=orgRepo,proto3" json:"org_repo,omitempty"` // e.g., "org/repo"
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *Project) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *Project) GetOrgRepo() string {
	if x != nil {
		return x.OrgRepo
	}
	return ""
}

// User information
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GithubId  string `protobuf:"bytes,1,opt,name=github_id,json=githubId,proto3" json:"github_id,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	PublicKey string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetGithubId() string {
	if x != nil {
		return x.GithubId
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

// Request/response for creating a project
type CreateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgRepo string `protobuf:"bytes,1,opt,name=org_repo,json=orgRepo,proto3" json:"org_repo,omitempty"`
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{2}
}

func (x *CreateProjectRequest) GetOrgRepo() string {
	if x != nil {
		return x.OrgRepo
	}
	return ""
}

type CreateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *CreateProjectResponse) Reset() {
	*x = CreateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResponse) ProtoMessage() {}

func (x *CreateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{3}
}

func (x *CreateProjectResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateProjectResponse) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// Request/response for registering a user
type RegisterUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *RegisterUserRequest) Reset() {
	*x = RegisterUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserRequest) ProtoMessage() {}

func (x *RegisterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserRequest.ProtoReflect.Descriptor instead.
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterUserRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type RegisterUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RegisterUserResponse) Reset() {
	*x = RegisterUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserResponse) ProtoMessage() {}

func (x *RegisterUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserResponse.ProtoReflect.Descriptor instead.
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterUserResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Request/response for getting a user's public key
type GetUserPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GithubId string `protobuf:"bytes,1,opt,name=github_id,json=githubId,proto3" json:"github_id,omitempty"`
}

func (x *GetUserPublicKeyRequest) Reset() {
	*x = GetUserPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPublicKeyRequest) ProtoMessage() {}

func (x *GetUserPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*GetUserPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserPublicKeyRequest) GetGithubId() string {
	if x != nil {
		return x.GithubId
	}
	return ""
}

type GetUserPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GithubId  string `protobuf:"bytes,1,opt,name=github_id,json=githubId,proto3" json:"github_id,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	PublicKey string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *GetUserPublicKeyResponse) Reset() {
	*x = GetUserPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPublicKeyResponse) ProtoMessage() {}

func (x *GetUserPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*GetUserPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserPublicKeyResponse) GetGithubId() string {
	if x != nil {
		return x.GithubId
	}
	return ""
}

func (x *GetUserPublicKeyResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserPublicKeyResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

// Per-user secrets for a project
type PerUserSecrets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgRepo string                `protobuf:"bytes,1,opt,name=org_repo,json=orgRepo,proto3" json:"org_repo,omitempty"`
	Secrets map[string]*SecretMap `protobuf:"bytes,2,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // github_id -> SecretMap
}

func (x *PerUserSecrets) Reset() {
	*x = PerUserSecrets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerUserSecrets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerUserSecrets) ProtoMessage() {}

func (x *PerUserSecrets) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerUserSecrets.ProtoReflect.Descriptor instead.
func (*PerUserSecrets) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{8}
}

func (x *PerUserSecrets) GetOrgRepo() string {
	if x != nil {
		return x.OrgRepo
	}
	return ""
}

func (x *PerUserSecrets) GetSecrets() map[string]*SecretMap {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type SecretMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secrets map[string]string `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SecretMap) Reset() {
	*x = SecretMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretMap) ProtoMessage() {}

func (x *SecretMap) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretMap.ProtoReflect.Descriptor instead.
func (*SecretMap) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{9}
}

func (x *SecretMap) GetSecrets() map[string]string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

// Request/response for setting per-user secrets
type SetPerUserSecretsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgRepo string                `protobuf:"bytes,1,opt,name=org_repo,json=orgRepo,proto3" json:"org_repo,omitempty"`
	Secrets map[string]*SecretMap `protobuf:"bytes,2,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SetPerUserSecretsRequest) Reset() {
	*x = SetPerUserSecretsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPerUserSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPerUserSecretsRequest) ProtoMessage() {}

func (x *SetPerUserSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPerUserSecretsRequest.ProtoReflect.Descriptor instead.
func (*SetPerUserSecretsRequest) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{10}
}

func (x *SetPerUserSecretsRequest) GetOrgRepo() string {
	if x != nil {
		return x.OrgRepo
	}
	return ""
}

func (x *SetPerUserSecretsRequest) GetSecrets() map[string]*SecretMap {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type SetPerUserSecretsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetPerUserSecretsResponse) Reset() {
	*x = SetPerUserSecretsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPerUserSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPerUserSecretsResponse) ProtoMessage() {}

func (x *SetPerUserSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPerUserSecretsResponse.ProtoReflect.Descriptor instead.
func (*SetPerUserSecretsResponse) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{11}
}

func (x *SetPerUserSecretsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Request/response for getting per-user secrets
type GetPerUserSecretsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgRepo string `protobuf:"bytes,1,opt,name=org_repo,json=orgRepo,proto3" json:"org_repo,omitempty"`
}

func (x *GetPerUserSecretsRequest) Reset() {
	*x = GetPerUserSecretsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPerUserSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPerUserSecretsRequest) ProtoMessage() {}

func (x *GetPerUserSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPerUserSecretsRequest.ProtoReflect.Descriptor instead.
func (*GetPerUserSecretsRequest) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{12}
}

func (x *GetPerUserSecretsRequest) GetOrgRepo() string {
	if x != nil {
		return x.OrgRepo
	}
	return ""
}

type GetPerUserSecretsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secrets map[string]*SecretMap `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetPerUserSecretsResponse) Reset() {
	*x = GetPerUserSecretsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_esec_esec_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPerUserSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPerUserSecretsResponse) ProtoMessage() {}

func (x *GetPerUserSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_esec_esec_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPerUserSecretsResponse.ProtoReflect.Descriptor instead.
func (*GetPerUserSecretsResponse) Descriptor() ([]byte, []int) {
	return file_esec_esec_proto_rawDescGZIP(), []int{13}
}

func (x *GetPerUserSecretsResponse) GetSecrets() map[string]*SecretMap {
	if x != nil {
		return x.Secrets
	}
	return nil
}

var File_esec_esec_proto protoreflect.FileDescriptor

var file_esec_esec_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x73, 0x65, 0x63, 0x2f, 0x65, 0x73, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x65, 0x73, 0x65, 0x63, 0x22, 0x4a, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6f, 0x72, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x52,
	0x65, 0x70, 0x6f, 0x22, 0x5e, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x22, 0x31, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x67, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x22, 0x49, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x22, 0x34, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x2e, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x36, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x49, 0x64, 0x22,
	0x72, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x22, 0xb5, 0x01, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x52, 0x65, 0x70,
	0x6f, 0x12, 0x3b, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x73, 0x65, 0x63, 0x2e, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x1a, 0x4b,
	0x0a, 0x0c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x65, 0x73, 0x65, 0x63, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x61, 0x70,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7f, 0x0a, 0x09, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x36, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x73, 0x65, 0x63,
	0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc9, 0x01, 0x0a,
	0x18, 0x53, 0x65, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x52, 0x65, 0x70, 0x6f, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x73, 0x65, 0x63, 0x2e, 0x53, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x1a, 0x4b, 0x0a, 0x0c, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65,
	0x73, 0x65, 0x63, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x35, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x52, 0x65, 0x70, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x73, 0x65, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x1a, 0x4b, 0x0a, 0x0c, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x73,
	0x65, 0x63, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x9d, 0x03, 0x0a, 0x0b, 0x45, 0x73, 0x65, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x65, 0x73, 0x65, 0x63, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x73, 0x65, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x19, 0x2e, 0x65, 0x73, 0x65, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65,
	0x73, 0x65, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x2e, 0x65,
	0x73, 0x65, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x73,
	0x65, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x12, 0x1e, 0x2e, 0x65, 0x73, 0x65, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x65, 0x73, 0x65, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x65, 0x73, 0x65, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x73, 0x65, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x73, 0x63, 0x6e, 0x6f, 0x2f, 0x65, 0x73, 0x65, 0x63,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x73,
	0x65, 0x63, 0x3b, 0x65, 0x73, 0x65, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_esec_esec_proto_rawDescOnce sync.Once
	file_esec_esec_proto_rawDescData = file_esec_esec_proto_rawDesc
)

func file_esec_esec_proto_rawDescGZIP() []byte {
	file_esec_esec_proto_rawDescOnce.Do(func() {
		file_esec_esec_proto_rawDescData = protoimpl.X.CompressGZIP(file_esec_esec_proto_rawDescData)
	})
	return file_esec_esec_proto_rawDescData
}

var file_esec_esec_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_esec_esec_proto_goTypes = []any{
	(*Project)(nil),                   // 0: esec.Project
	(*User)(nil),                      // 1: esec.User
	(*CreateProjectRequest)(nil),      // 2: esec.CreateProjectRequest
	(*CreateProjectResponse)(nil),     // 3: esec.CreateProjectResponse
	(*RegisterUserRequest)(nil),       // 4: esec.RegisterUserRequest
	(*RegisterUserResponse)(nil),      // 5: esec.RegisterUserResponse
	(*GetUserPublicKeyRequest)(nil),   // 6: esec.GetUserPublicKeyRequest
	(*GetUserPublicKeyResponse)(nil),  // 7: esec.GetUserPublicKeyResponse
	(*PerUserSecrets)(nil),            // 8: esec.PerUserSecrets
	(*SecretMap)(nil),                 // 9: esec.SecretMap
	(*SetPerUserSecretsRequest)(nil),  // 10: esec.SetPerUserSecretsRequest
	(*SetPerUserSecretsResponse)(nil), // 11: esec.SetPerUserSecretsResponse
	(*GetPerUserSecretsRequest)(nil),  // 12: esec.GetPerUserSecretsRequest
	(*GetPerUserSecretsResponse)(nil), // 13: esec.GetPerUserSecretsResponse
	nil,                               // 14: esec.PerUserSecrets.SecretsEntry
	nil,                               // 15: esec.SecretMap.SecretsEntry
	nil,                               // 16: esec.SetPerUserSecretsRequest.SecretsEntry
	nil,                               // 17: esec.GetPerUserSecretsResponse.SecretsEntry
}
var file_esec_esec_proto_depIdxs = []int32{
	14, // 0: esec.PerUserSecrets.secrets:type_name -> esec.PerUserSecrets.SecretsEntry
	15, // 1: esec.SecretMap.secrets:type_name -> esec.SecretMap.SecretsEntry
	16, // 2: esec.SetPerUserSecretsRequest.secrets:type_name -> esec.SetPerUserSecretsRequest.SecretsEntry
	17, // 3: esec.GetPerUserSecretsResponse.secrets:type_name -> esec.GetPerUserSecretsResponse.SecretsEntry
	9,  // 4: esec.PerUserSecrets.SecretsEntry.value:type_name -> esec.SecretMap
	9,  // 5: esec.SetPerUserSecretsRequest.SecretsEntry.value:type_name -> esec.SecretMap
	9,  // 6: esec.GetPerUserSecretsResponse.SecretsEntry.value:type_name -> esec.SecretMap
	2,  // 7: esec.EsecService.CreateProject:input_type -> esec.CreateProjectRequest
	4,  // 8: esec.EsecService.RegisterUser:input_type -> esec.RegisterUserRequest
	6,  // 9: esec.EsecService.GetUserPublicKey:input_type -> esec.GetUserPublicKeyRequest
	10, // 10: esec.EsecService.SetPerUserSecrets:input_type -> esec.SetPerUserSecretsRequest
	12, // 11: esec.EsecService.GetPerUserSecrets:input_type -> esec.GetPerUserSecretsRequest
	3,  // 12: esec.EsecService.CreateProject:output_type -> esec.CreateProjectResponse
	5,  // 13: esec.EsecService.RegisterUser:output_type -> esec.RegisterUserResponse
	7,  // 14: esec.EsecService.GetUserPublicKey:output_type -> esec.GetUserPublicKeyResponse
	11, // 15: esec.EsecService.SetPerUserSecrets:output_type -> esec.SetPerUserSecretsResponse
	13, // 16: esec.EsecService.GetPerUserSecrets:output_type -> esec.GetPerUserSecretsResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_esec_esec_proto_init() }
func file_esec_esec_proto_init() {
	if File_esec_esec_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_esec_esec_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RegisterUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PerUserSecrets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SecretMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SetPerUserSecretsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SetPerUserSecretsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetPerUserSecretsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_esec_esec_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetPerUserSecretsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_esec_esec_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_esec_esec_proto_goTypes,
		DependencyIndexes: file_esec_esec_proto_depIdxs,
		MessageInfos:      file_esec_esec_proto_msgTypes,
	}.Build()
	File_esec_esec_proto = out.File
	file_esec_esec_proto_rawDesc = nil
	file_esec_esec_proto_goTypes = nil
	file_esec_esec_proto_depIdxs = nil
}
